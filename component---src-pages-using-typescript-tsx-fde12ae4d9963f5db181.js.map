{"version":3,"file":"component---src-pages-using-typescript-tsx-fde12ae4d9963f5db181.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/navigation.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport './navigation.css'\n\nconst Navigation = () => {\n  return (\n    <nav className=\"site-navigation\">\n      <ul className=\"nav-links\">\n        <li><Link to=\"/\" activeClassName=\"active\">首頁</Link></li>\n        <li><Link to=\"/archive\" activeClassName=\"active\">文章歸檔</Link></li>\n        <li><Link to=\"/categories\" activeClassName=\"active\">分類檢索</Link></li>\n        <li className=\"rss-link\">\n          <a\n            href=\"/rss.xml\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"rss-button\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"rss-icon\"\n            >\n              <path d=\"M4 11a9 9 0 0 1 9 9\" />\n              <path d=\"M4 4a16 16 0 0 1 16 16\" />\n              <circle cx=\"5\" cy=\"19\" r=\"1\" />\n            </svg>\n            <span>訂閱 RSS</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navigation ","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Navigation from \"./navigation\"\nimport \"../style.css\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location?.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">\n        <div className=\"site-title\">\n          <Link to=\"/\">Roger's Note</Link>\n          <div className=\"site-subtitle\">Investor, Operator, Philosopher</div>\n        </div>\n        <Navigation />\n      </header>\n      <main>{children}</main>\n      <footer className=\"site-footer\">\n        © {new Date().getFullYear()} Roger's Note\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","Navigation","className","activeClassName","target","rel","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","children","isRootPath","pathname","Date","getFullYear","_site$siteMetadata","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property"],"sourceRoot":""}