{"version":3,"file":"component---src-templates-blog-post-js-a375dae0db0416f63dd3.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/navigation.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/LanguageToggle.js","webpack://gatsby-starter-blog/./src/components/table-of-contents.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport './navigation.css'\n\nconst Navigation = () => {\n  return (\n    <nav className=\"site-navigation\">\n      <ul className=\"nav-links\">\n        <li><Link to=\"/\" activeClassName=\"active\">首頁</Link></li>\n        <li><Link to=\"/archive\" activeClassName=\"active\">文章歸檔</Link></li>\n        <li><Link to=\"/categories\" activeClassName=\"active\">分類檢索</Link></li>\n        <li className=\"rss-link\">\n          <a\n            href=\"/rss.xml\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"rss-button\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"rss-icon\"\n            >\n              <path d=\"M4 11a9 9 0 0 1 9 9\" />\n              <path d=\"M4 4a16 16 0 0 1 16 16\" />\n              <circle cx=\"5\" cy=\"19\" r=\"1\" />\n            </svg>\n            <span>訂閱 RSS</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navigation ","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Navigation from \"./navigation\"\nimport \"../style.css\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location?.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">\n        <div className=\"site-title\">\n          <Link to=\"/\">Roger's Note</Link>\n          <div className=\"site-subtitle\">Investor, Operator, Philosopher</div>\n        </div>\n        <Navigation />\n      </header>\n      <main>{children}</main>\n      <footer className=\"site-footer\">\n        © {new Date().getFullYear()} Roger's Note\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React, { useEffect, useState } from \"react\"\n\nconst LanguageToggle = () => {\n  const [activeMode, setActiveMode] = useState(\"both\")\n  const [hasBilingualContent, setHasBilingualContent] = useState(false)\n\n  // 將函數定義移到 useEffect 之前\n  const applyLanguageMode = (mode) => {\n    const containers = document.querySelectorAll(\".bilingual-container\")\n    \n    containers.forEach(container => {\n      const chineseColumns = container.querySelectorAll(\".bilingual-column.chinese-column\")\n      const englishColumns = container.querySelectorAll(\".bilingual-column.english-column\")\n      \n      if (mode === \"both\") {\n        container.style.gridTemplateColumns = \"1fr 1fr\"\n        chineseColumns.forEach(col => col.style.display = \"block\")\n        englishColumns.forEach(col => col.style.display = \"block\")\n      } else if (mode === \"chinese\") {\n        container.style.gridTemplateColumns = \"1fr\"\n        chineseColumns.forEach(col => col.style.display = \"block\")\n        englishColumns.forEach(col => col.style.display = \"none\")\n      } else if (mode === \"english\") {\n        container.style.gridTemplateColumns = \"1fr\"\n        chineseColumns.forEach(col => col.style.display = \"none\")\n        englishColumns.forEach(col => col.style.display = \"block\")\n      }\n    })\n  }\n\n  const handleModeChange = (mode) => {\n    setActiveMode(mode)\n    applyLanguageMode(mode)\n    // 保存用戶偏好到 localStorage\n    localStorage.setItem(\"languagePreference\", mode)\n  }\n\n  useEffect(() => {\n    // 檢查頁面是否包含雙語內容\n    const containers = document.querySelectorAll(\".bilingual-container\")\n    setHasBilingualContent(containers.length > 0)\n    \n    // 如果有雙語內容，應用保存的偏好設置\n    if (containers.length > 0) {\n      const savedPreference = localStorage.getItem(\"languagePreference\")\n      if (savedPreference) {\n        setActiveMode(savedPreference)\n        applyLanguageMode(savedPreference)\n      }\n    }\n  }, [])\n\n  // 如果沒有雙語內容，不顯示切換按鈕\n  if (!hasBilingualContent) {\n    return null\n  }\n\n  // 添加內聯樣式，不依賴外部 CSS 文件\n  const toggleStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"1rem 0 2rem\",\n    gap: \"0.5rem\",\n  }\n\n  const buttonStyle = {\n    padding: \"0.5rem 1rem\",\n    border: \"1px solid #ccc\",\n    backgroundColor: \"#f8f8f8\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"0.9rem\",\n    transition: \"all 0.2s ease\",\n  }\n\n  const activeButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#0070f3\",\n    color: \"white\",\n    borderColor: \"#0070f3\",\n  }\n\n  return (\n    <div style={toggleStyle}>\n      <button \n        style={activeMode === \"both\" ? activeButtonStyle : buttonStyle}\n        onClick={() => handleModeChange(\"both\")}\n      >\n        中英對照\n      </button>\n      <button \n        style={activeMode === \"chinese\" ? activeButtonStyle : buttonStyle}\n        onClick={() => handleModeChange(\"chinese\")}\n      >\n        僅中文\n      </button>\n      <button \n        style={activeMode === \"english\" ? activeButtonStyle : buttonStyle}\n        onClick={() => handleModeChange(\"english\")}\n      >\n        僅英文\n      </button>\n    </div>\n  )\n}\n\nexport default LanguageToggle","import React, { useState, useEffect } from \"react\"\n\nconst TableOfContents = ({ headings }) => {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 767);\n    };\n    \n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    \n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  if (!headings || headings.length === 0) return null;\n\n  const toggleCollapse = () => {\n    if (isMobile) {\n      setIsCollapsed(!isCollapsed);\n    }\n  };\n\n  return (\n    <nav className={`toc-container ${isMobile ? (isCollapsed ? 'collapsed' : 'expanded') : ''}`}>\n      <div className=\"toc-title\" onClick={toggleCollapse}>\n        目錄\n      </div>\n      <ul className=\"toc-list\">\n        {headings.map(heading => (\n          <li \n            key={heading.id}\n            className={`toc-item depth-${heading.depth}`}\n          >\n            <a \n              href={`#${heading.id}`}\n              onClick={() => isMobile && setIsCollapsed(true)}\n            >\n              {heading.value}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default TableOfContents;","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport LanguageToggle from \"../components/LanguageToggle\"\nimport TableOfContents from \"../components/table-of-contents\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  // 添加錯誤檢查，確保 data 和 data.markdownRemark 存在\n  if (!data || !data.markdownRemark) {\n    return (\n      <Layout location={location} title=\"Error\">\n        <p>無法加載文章數據。請稍後再試。</p>\n      </Layout>\n    )\n  }\n\n  const post = data.markdownRemark\n  // 添加錯誤檢查，確保 data.site 存在\n  const siteTitle = data?.site?.siteMetadata?.title || `YT翻譯`\n  const { previous, next } = pageContext || {}\n  const categories = post.frontmatter?.categories || []\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"blog-post-container\">\n        <article\n          className=\"blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header className=\"post-header\">\n            <h1 className=\"post-title\" itemProp=\"headline\">\n              {post.frontmatter.title}\n            </h1>\n            <p className=\"post-date\">{post.frontmatter.date}</p>\n            {categories && categories.length > 0 && (\n              <div className=\"post-tags\">\n                {categories.map((category, index) => (\n                  <Link \n                    key={category}\n                    to={`/categories#${encodeURIComponent(category)}`}\n                    className=\"post-tag\"\n                  >\n                    {category}\n                  </Link>\n                ))}\n              </div>\n            )}\n            {post.frontmatter.description && (\n              <p className=\"post-description\">\n                {post.frontmatter.description}\n              </p>\n            )}\n          </header>\n          \n          <LanguageToggle />\n          \n          <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr />\n        </article>\n        <TableOfContents headings={post.headings} />\n      </div>\n      <nav className=\"pagination\">\n        <div>\n          {previous && (\n            <Link to={previous.fields?.slug || \"/\"} rel=\"prev\">\n              ← {previous.frontmatter?.title || \"上一篇\"}\n            </Link>\n          )}\n        </div>\n        <div>\n          {next && (\n            <Link to={next.fields?.slug || \"/\"} rel=\"next\">\n              {next.frontmatter?.title || \"下一篇\"} →\n            </Link>\n          )}\n        </div>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostById($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      headings {\n        value\n        depth\n        id\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        categories\n      }\n    }\n  }\n`\n"],"names":["Navigation","React","className","Link","to","activeClassName","href","target","rel","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","_ref","location","title","children","isRootPath","pathname","Date","getFullYear","_site$siteMetadata","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","LanguageToggle","activeMode","setActiveMode","useState","hasBilingualContent","setHasBilingualContent","applyLanguageMode","mode","document","querySelectorAll","forEach","container","chineseColumns","englishColumns","style","gridTemplateColumns","col","display","handleModeChange","localStorage","setItem","useEffect","containers","length","savedPreference","getItem","buttonStyle","padding","border","backgroundColor","borderRadius","cursor","fontSize","transition","activeButtonStyle","color","borderColor","justifyContent","margin","gap","onClick","headings","isCollapsed","setIsCollapsed","isMobile","setIsMobile","checkMobile","window","innerWidth","addEventListener","removeEventListener","toggleCollapse","map","heading","key","id","depth","value","_data$site","_data$site$siteMetada","_post$frontmatter","_previous$fields","_previous$frontmatter","_next$fields","_next$frontmatter","data","pageContext","markdownRemark","Layout","post","siteTitle","previous","next","categories","frontmatter","SEO","excerpt","itemScope","itemType","itemProp","date","category","index","encodeURIComponent","dangerouslySetInnerHTML","__html","html","TableOfContents","fields","slug"],"sourceRoot":""}