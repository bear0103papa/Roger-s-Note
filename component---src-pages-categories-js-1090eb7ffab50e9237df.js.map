{"version":3,"file":"component---src-pages-categories-js-1090eb7ffab50e9237df.js","mappings":"wKA+HA,UA3HmBA,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACpC,MAAOG,EAAYC,GAAiBC,EAAAA,SAAe,IAG7CC,EAAgBC,MAAMC,KAC1B,IAAIC,IACFR,EAAKS,kBAAkBC,MAAMC,SAC3BC,GAAQA,EAAKC,YAAYC,YAAc,OAG3CC,OAGIC,EAAkBZ,EAAAA,SAAc,KACpC,IAAKH,EAASgB,KAAM,MAAO,GAC3B,IACE,OAAOC,mBAAmBjB,EAASgB,KAAKE,MAAM,GAChD,CAAE,MAAOC,GAEP,OADAC,QAAQC,MAAM,UAAWF,GAClB,EACT,IACC,CAACnB,EAASgB,OAGPM,EAAuBC,IACtBA,GAGHC,EAAAA,EAAAA,UAAS,eAAeC,mBAAmBF,OAF3CC,EAAAA,EAAAA,UAAS,cAGX,EAIIE,EAAgB3B,EAAKS,kBAAkBC,MAC1CkB,QAAOhB,IAAS,IAADiB,EAEd,MAAMC,GAAmBd,IACtBJ,EAAKC,YAAYC,YAAc,IAAIiB,MAAKC,GACvCA,IAAQhB,IAINiB,EAAkB/B,EAAWgC,cAC7BC,GAAiBjC,GACrBU,EAAKC,YAAYuB,MAAMF,cAAcG,SAASJ,KAClB,QADkCJ,EAC9DjB,EAAKC,YAAYyB,mBAAW,IAAAT,OAAA,EAA5BA,EAA8BK,cAAcG,SAASJ,KACrDrB,EAAK2B,QAAQL,cAAcG,SAASJ,IACpCrB,EAAK4B,KAAKN,cAAcG,SAASJ,GAEnC,OAAOH,GAAmBK,CAAa,IAG3C,OACE/B,EAAAA,cAACqC,EAAAA,EAAM,CAACxC,SAAUA,EAAUmC,MAAM,QAChChC,EAAAA,cAAA,OAAKsC,UAAU,wBAEbtC,EAAAA,cAAA,OAAKsC,UAAU,cACbtC,EAAAA,cAAA,SACEuC,KAAK,OACLC,MAAO1C,EACP2C,SAAWzB,GAAMjB,EAAciB,EAAE0B,OAAOF,OACxCG,YAAY,UACZL,UAAU,iBAEXxC,GACCE,EAAAA,cAAA,UACEsC,UAAU,eACVM,QAASA,IAAM7C,EAAc,IAC7B,aAAW,QACZ,MAOLC,EAAAA,cAAA,OAAKsC,UAAU,iBACbtC,EAAAA,cAAA,UACEsC,UAAY1B,EAA6B,GAAX,SAC9BgC,QAASA,IAAMzB,EAAoB,KACpC,QAGAlB,EAAc4C,KAAIzB,GACjBpB,EAAAA,cAAA,UACE8C,IAAK1B,EACLkB,UAAWlB,IAAaR,EAAkB,SAAW,GACrDgC,QAASA,IAAMzB,EAAoBC,IAElCA,MAMPpB,EAAAA,cAAA,OAAKsC,UAAU,wBAAuB,MAChCf,EAAcwB,OAAO,QAI3B/C,EAAAA,cAAA,OAAKsC,UAAU,cACZf,EAAcsB,KAAIG,GACjBhD,EAAAA,cAAA,WAAS8C,IAAKE,EAAKC,OAAOC,KAAMZ,UAAU,kBACxCtC,EAAAA,cAACmD,EAAAA,KAAI,CAACC,GAAIJ,EAAKC,OAAOC,MACpBlD,EAAAA,cAAA,UAAKgD,EAAKvC,YAAYuB,OACtBhC,EAAAA,cAAA,aAAQgD,EAAKvC,YAAY4C,MACxBL,EAAKvC,YAAYyB,aAChBlC,EAAAA,cAAA,SAAIgD,EAAKvC,YAAYyB,aAEtBpC,GACCE,EAAAA,cAAA,KAAGsC,UAAU,kBACVU,EAAKb,eAQb,C,+ECnFb,MApCmBmB,IAEftD,EAAAA,cAAA,OAAKsC,UAAU,mBACbtC,EAAAA,cAAA,MAAIsC,UAAU,aACZtC,EAAAA,cAAA,UAAIA,EAAAA,cAACmD,EAAAA,KAAI,CAACC,GAAG,IAAIG,gBAAgB,UAAS,OAC1CvD,EAAAA,cAAA,UAAIA,EAAAA,cAACmD,EAAAA,KAAI,CAACC,GAAG,WAAWG,gBAAgB,UAAS,SACjDvD,EAAAA,cAAA,UAAIA,EAAAA,cAACmD,EAAAA,KAAI,CAACC,GAAG,cAAcG,gBAAgB,UAAS,SACpDvD,EAAAA,cAAA,MAAIsC,UAAU,YACZtC,EAAAA,cAAA,KACEwD,KAAK,WACLd,OAAO,SACPe,IAAI,sBACJnB,UAAU,cAEVtC,EAAAA,cAAA,OACE0D,MAAM,6BACNC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACf1B,UAAU,YAEVtC,EAAAA,cAAA,QAAMiE,EAAE,wBACRjE,EAAAA,cAAA,QAAMiE,EAAE,2BACRjE,EAAAA,cAAA,UAAQkE,GAAG,IAAIC,GAAG,KAAKC,EAAE,OAE3BpE,EAAAA,cAAA,YAAM,cCNlB,MArBeL,IAAoC,IAAnC,SAAEE,EAAQ,MAAEmC,EAAK,SAAEqC,GAAU1E,EAC3C,MACM2E,EADW,oBACEzE,aAAQ,EAARA,EAAU0E,UAE7B,OACEvE,EAAAA,cAAA,OAAKsC,UAAU,iBAAiB,oBAAmBgC,GACjDtE,EAAAA,cAAA,UAAQsC,UAAU,iBAChBtC,EAAAA,cAAA,OAAKsC,UAAU,cACbtC,EAAAA,cAACmD,EAAAA,KAAI,CAACC,GAAG,KAAI,gBACbpD,EAAAA,cAAA,OAAKsC,UAAU,iBAAgB,oCAEjCtC,EAAAA,cAACsD,EAAU,OAEbtD,EAAAA,cAAA,YAAOqE,GACPrE,EAAAA,cAAA,UAAQsC,UAAU,eAAc,MAC3B,IAAIkC,MAAOC,cAAc,iBAE1B,C","sources":["webpack://gatsby-starter-blog/./src/pages/categories.js","webpack://gatsby-starter-blog/./src/components/navigation.js","webpack://gatsby-starter-blog/./src/components/layout.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql, navigate } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nconst Categories = ({ data, location }) => {\n  const [searchTerm, setSearchTerm] = React.useState(\"\")\n  \n  // 獲取所有唯一的分類\n  const allCategories = Array.from(\n    new Set(\n      data.allMarkdownRemark.nodes.flatMap(\n        node => node.frontmatter.categories || []\n      )\n    )\n  ).sort()\n\n  // 從 URL 獲取當前選中的分類\n  const currentCategory = React.useMemo(() => {\n    if (!location.hash) return \"\"\n    try {\n      return decodeURIComponent(location.hash.slice(1))\n    } catch (e) {\n      console.error(\"解碼分類失敗:\", e)\n      return \"\"\n    }\n  }, [location.hash])\n\n  // 處理分類點擊\n  const handleCategoryClick = (category) => {\n    if (!category) {\n      navigate(`/categories`)\n    } else {\n      navigate(`/categories#${encodeURIComponent(category)}`)\n    }\n  }\n\n  // 過濾文章（根據分類和搜尋詞）\n  const filteredPosts = data.allMarkdownRemark.nodes\n    .filter(node => {\n      // 先檢查分類\n      const matchesCategory = !currentCategory || \n        (node.frontmatter.categories || []).some(cat => \n          cat === currentCategory\n        )\n      \n      // 再檢查搜尋詞（包含全文搜尋）\n      const searchTermLower = searchTerm.toLowerCase()\n      const matchesSearch = !searchTerm || \n        node.frontmatter.title.toLowerCase().includes(searchTermLower) ||\n        node.frontmatter.description?.toLowerCase().includes(searchTermLower) ||\n        node.excerpt.toLowerCase().includes(searchTermLower) ||\n        node.html.toLowerCase().includes(searchTermLower)\n      \n      return matchesCategory && matchesSearch\n    })\n\n  return (\n    <Layout location={location} title=\"分類檢索\">\n      <div className=\"categories-container\">\n        {/* 搜索框 */}\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            placeholder=\"搜尋全文...\"\n            className=\"search-input\"\n          />\n          {searchTerm && (\n            <button \n              className=\"clear-search\"\n              onClick={() => setSearchTerm(\"\")}\n              aria-label=\"清除搜尋\"\n            >\n              ×\n            </button>\n          )}\n        </div>\n\n        {/* 分類標籤 */}\n        <div className=\"category-tags\">\n          <button\n            className={!currentCategory ? \"active\" : \"\"}\n            onClick={() => handleCategoryClick(\"\")}\n          >\n            全部文章\n          </button>\n          {allCategories.map(category => (\n            <button\n              key={category}\n              className={category === currentCategory ? \"active\" : \"\"}\n              onClick={() => handleCategoryClick(category)}\n            >\n              {category}\n            </button>\n          ))}\n        </div>\n\n        {/* 搜尋結果計數 */}\n        <div className=\"search-results-count\">\n          找到 {filteredPosts.length} 篇文章\n        </div>\n\n        {/* 文章列表 */}\n        <div className=\"posts-list\">\n          {filteredPosts.map(post => (\n            <article key={post.fields.slug} className=\"post-list-item\">\n              <Link to={post.fields.slug}>\n                <h2>{post.frontmatter.title}</h2>\n                <small>{post.frontmatter.date}</small>\n                {post.frontmatter.description && (\n                  <p>{post.frontmatter.description}</p>\n                )}\n                {searchTerm && (\n                  <p className=\"search-excerpt\">\n                    {post.excerpt}\n                  </p>\n                )}\n              </Link>\n            </article>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Categories\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt(pruneLength: 200)\n        html\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          categories\n        }\n      }\n    }\n  }\n` ","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport './navigation.css'\n\nconst Navigation = () => {\n  return (\n    <nav className=\"site-navigation\">\n      <ul className=\"nav-links\">\n        <li><Link to=\"/\" activeClassName=\"active\">首頁</Link></li>\n        <li><Link to=\"/archive\" activeClassName=\"active\">文章歸檔</Link></li>\n        <li><Link to=\"/categories\" activeClassName=\"active\">分類檢索</Link></li>\n        <li className=\"rss-link\">\n          <a\n            href=\"/rss.xml\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"rss-button\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"rss-icon\"\n            >\n              <path d=\"M4 11a9 9 0 0 1 9 9\" />\n              <path d=\"M4 4a16 16 0 0 1 16 16\" />\n              <circle cx=\"5\" cy=\"19\" r=\"1\" />\n            </svg>\n            <span>訂閱 RSS</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navigation ","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Navigation from \"./navigation\"\nimport \"../style.css\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location?.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">\n        <div className=\"site-title\">\n          <Link to=\"/\">Roger's Note</Link>\n          <div className=\"site-subtitle\">Investor, Operator, Philosopher</div>\n        </div>\n        <Navigation />\n      </header>\n      <main>{children}</main>\n      <footer className=\"site-footer\">\n        © {new Date().getFullYear()} Roger's Note\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n"],"names":["_ref","data","location","searchTerm","setSearchTerm","React","allCategories","Array","from","Set","allMarkdownRemark","nodes","flatMap","node","frontmatter","categories","sort","currentCategory","hash","decodeURIComponent","slice","e","console","error","handleCategoryClick","category","navigate","encodeURIComponent","filteredPosts","filter","_node$frontmatter$des","matchesCategory","some","cat","searchTermLower","toLowerCase","matchesSearch","title","includes","description","excerpt","html","Layout","className","type","value","onChange","target","placeholder","onClick","map","key","length","post","fields","slug","Link","to","date","Navigation","activeClassName","href","rel","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","children","isRootPath","pathname","Date","getFullYear"],"sourceRoot":""}