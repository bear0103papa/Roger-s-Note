‘Nothing is ever done until everyone is convinced that it ought to be done, and has been convinced for so long that it is now time to do something else’ - F. M. Cornford

As I talk to people inside and outside tech about generative AI, one of the more interesting disconnects I encounter is between people who think that every big company is going to deploy this Right NOW, and people who have some experience of how enterprise software works, and think that this will take years. This is pretty much what all the available data shows so far - in my latest presentation I cited data from Morgan Stanley and Bain that says perhaps a quarter of CIOs have deployed any generative AI project so far, and another quarter only expect to do so in 2026 or later. 

This kind of timing isn’t specific to AI. Generative AI started working about two years ago now, and that’s pretty much as long as it takes to build enterprise software. But then it takes 9 or 12 or 18 months for a big company to decide to buy the software… and then there’s the time to actually buy it and deploy it, and that’s just for one piece of software. 

If you work in a field where the software is the product and the customers can all leave tomorrow, moving at this speed sounds suicidal, but if you’re a supermarket, or an airline, or a cement company, then software is not the point of leverage, at least not on that time frame. Software is a support function, and so you need to persuade quite a lot of people that this is worth having and worth buying, you need to find budget and opportunity cost, and you need to be comfortable that you can deploy it without breaking anything (Crowdstrike should have reminded us all why people who run large complex infrastructure that lots of people depend on don’t like making hasty changes). 

Of course, sometimes big companies are just slow, sometimes they underfund or mismanage their IT, and sometimes their priorities are just elsewhere. I once met the CEO of a large water company who listened intently to my presentation and, when it was over, declared that perhaps, ‘innovation’ should be one of their top five priorities next year. This sounds insane until you remember that he was, after all, running a water company. If infrastructure works, and changing it will not bring some fundamental ‘hair on fire’ business benefit, there are always other things to spend money on. This can get very corporate indeed sometimes: one of the issues moving from on-prem to cloud (still only 25-30% of enterprise workflows, after 25 years!) is that on-prem is capitalised and SaaS subscriptions might be opex, so making a change that saves the company money might need a write-down and hurt your EPS. 

On the other hand, after 25 years of cloud, the typical big company today has 4-500 SaaS applications deployed. One of the reasons SaaS works so well is that it’s easier for a big company to deploy - it’s ‘just’ a website and you don’t need to get onto the enterprise datacentre roadmap. But each of those applications is doing something very specific, and that’s the other side of the problem: each of them is solving a problem an entrepreneur had to realise existed, and built a product around, and then built a sales force around the product, and worked out how to persuade the right people in the right companies that they needed this, one product, one company, and one team at a time. 

Conversely, the great fallacy of enterprise software in the last decade or two was that SaaS meant you could bypass sales and go direct. Build a better mousetrap and people will come to you! But the reality was that this got you 5-10% of the market and then you ran out of people able, willing, and empowered to look for new tools. Most people who got sold a SaaS app were already doing that thing in Excel, email, Salesforce, SAP, or whatever and had never realised that it could be done better in a dedicated app, or even that they were doing that specific thing at all. It’s the job of the entrepreneur and the software company to think how software could do something new. And just finding this problem takes time, even before you build the product and persuade people to buy it. 

All of this applies a thousandfold to LLMs, because ChatGPT isn’t solving any problem in particular for most people. For software developers or marketers, and a few other fields, this is immediately useful, and so too for that 5-10% of people who will always look for a better way and have problems where this works. But for everyone else, we need better models, or we need products that map those models into ideas for problems, or both. And that takes time. 

